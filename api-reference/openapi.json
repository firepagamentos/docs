{
  "openapi": "3.1.0",
  "info": {
    "title": "API FireBanking",
    "description": "API abrangente para processamento de pagamentos, incluindo cartão de crédito, PIX, pagamentos instantâneos, assinaturas, gestão de compradores e muito mais.",
    "version": "1.0.0",
    "contact": {
      "name": "Suporte da API FireBanking",
      "url": "https://firebanking.com/support",
      "email": "api-support@firebanking.com"
    }
  },
  "servers": [
    {
      "url": "https://api-gateway.firebanking.dev",
      "description": "Servidor de teste (sandbox)"
    },
    {
      "url": "https://api-gateway.firebanking.com.br",
      "description": "Servidor de produção"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/credit-card/v1/payment": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Criar Pagamento",
        "description": "Criar um novo pagamento com dados do cartão ou token do cartão",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pagamento criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Pagamento"],
        "summary": "Listar Pagamentos",
        "description": "Obter uma lista de pagamentos com paginação",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Número de itens a pular",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número máximo de itens a retornar",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Incluir contagem total na resposta",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamentos recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/token": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Criar Token de Cartão",
        "description": "Criar um token reutilizável e seguro para um cartão de crédito",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token de cartão criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/token/{buyerUuid}": {
      "get": {
        "tags": ["Pagamento"],
        "summary": "Obter Tokens de Cartão por Comprador",
        "description": "Recuperar todos os tokens de cartão para um comprador específico",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "buyerUuid",
            "in": "path",
            "required": true,
            "description": "UUID do comprador",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens de cartão recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}": {
      "get": {
        "tags": ["Pagamento"],
        "summary": "Obter Pagamento por ID",
        "description": "Recuperar um pagamento específico pelo seu ID",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}/capture": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Capturar Pagamento",
        "description": "Capturar um pagamento pré-autorizado",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento a capturar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento capturado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}/refund": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Estornar Pagamento",
        "description": "Estornar um pagamento completado",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento a estornar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento estornado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}/cancel-capture": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Cancelar Pré-Autorização",
        "description": "Cancelar um pagamento pré-autorizado",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento a cancelar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pré-autorização cancelada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/buyer": {
      "post": {
        "tags": ["Comprador"],
        "summary": "Criar Comprador",
        "description": "Criar um novo registro de comprador",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBuyerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comprador criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Comprador"],
        "summary": "Listar Compradores",
        "description": "Obter uma lista de compradores com filtros opcionais",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "document",
            "in": "query",
            "description": "Filtrar por número de documento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filtrar por nome do comprador",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filtrar por endereço de email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página para paginação",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Número de itens por página",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compradores recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuyerResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/buyer/{buyerUuid}": {
      "get": {
        "tags": ["Comprador"],
        "summary": "Obter Comprador por ID",
        "description": "Recuperar um comprador específico pelo seu UUID",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "buyerUuid",
            "in": "path",
            "required": true,
            "description": "UUID do comprador",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comprador recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Comprador não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/subscription": {
      "post": {
        "tags": ["Assinatura"],
        "summary": "Criar Assinatura",
        "description": "Criar uma nova assinatura",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assinatura criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/subscription/{subscriptionId}": {
      "delete": {
        "tags": ["Assinatura"],
        "summary": "Cancelar Assinatura",
        "description": "Cancelar uma assinatura ativa",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "ID da assinatura a cancelar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assinatura cancelada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Assinatura"],
        "summary": "Atualizar Assinatura",
        "description": "Atualizar frequência de cobrança ou valor da assinatura",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "ID da assinatura a atualizar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assinatura atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/account/balance": {
      "get": {
        "tags": ["Conta"],
        "summary": "Obter Saldo da Conta",
        "description": "Verificar saldo atualizado da conta com informações detalhadas sobre saldo total, bloqueado e disponível",
        "security": [{ "apiKeyAuth": [] }],
        "responses": {
          "200": {
            "description": "Saldo da conta recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountBalanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Proibido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/health": {
      "get": {
        "tags": ["Sistema"],
        "summary": "Verificação de Saúde",
        "description": "Verificar status de saúde da API",
        "responses": {
          "200": {
            "description": "API está saudável",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/barte-a9b484fc-90a6-4255-9394-e3c1ca0633b9-webhook": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Webhook Específico do Barte",
        "description": "Endpoint de webhook para eventos específicos do Barte",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarteWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processado com sucesso"
          }
        }
      }
    },
    "/webhooks/BARTE": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Webhook Genérico de Provedor",
        "description": "Endpoint de webhook genérico para eventos de provedor",
        "security": [{ "basicAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processado com sucesso"
          }
        }
      }
    },
    "/internal/manager/barte/{sellerId}/balance": {
      "get": {
        "tags": ["Interno"],
        "summary": "Obter Saldo do Barte",
        "description": "Obter saldo para um vendedor Barte (uso interno)",
        "security": [{ "basicAuth": [] }],
        "parameters": [
          {
            "name": "sellerId",
            "in": "path",
            "required": true,
            "description": "ID do vendedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Saldo recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/internal/manager/barte/{sellerId}/redeems": {
      "post": {
        "tags": ["Interno"],
        "summary": "Solicitar Resgate do Barte",
        "description": "Solicitar um resgate para um vendedor Barte (uso interno)",
        "security": [{ "basicAuth": [] }],
        "parameters": [
          {
            "name": "sellerId",
            "in": "path",
            "required": true,
            "description": "ID do vendedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resgate solicitado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/internal/payment/{businessId}": {
      "post": {
        "tags": ["Interno"],
        "summary": "Criar Pagamento Interno",
        "description": "Criar pagamento usando chave de API interna",
        "security": [{ "internalToken": [] }],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "description": "ID do negócio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pagamento criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment": {
      "post": {
        "tags": ["PIX"],
        "summary": "Criar PIX QR Code",
        "operationId": "createPixQrCode",
        "description": "Cria uma cobrança PIX com QR Code dinâmico",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePixPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cobrança PIX criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment/{id}": {
      "get": {
        "tags": ["PIX"],
        "summary": "Consultar Transação PIX",
        "description": "Consulta o status e detalhes de uma transação PIX",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID da transação PIX ou externalId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes da transação PIX",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transação não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment/withdraw": {
      "post": {
        "tags": ["PIX"],
        "summary": "Criar Transferência PIX",
        "description": "Realiza transferências PIX para chaves PIX ou contas bancárias",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePixWithdrawRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transferência PIX criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixWithdrawResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment/refund/{id}": {
      "post": {
        "tags": ["PIX"],
        "summary": "Estornar Transação PIX",
        "description": "Solicita o estorno de uma transação PIX paga",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID da transação PIX a ser estornada",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PixRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estorno processado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Transação não elegível para estorno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment": {
      "post": {
        "tags": ["Boleto"],
        "summary": "Criar Boleto",
        "description": "Cria um novo boleto bancário com dados do pagador e prazo de vencimento",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoletoRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Boleto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment/{id}": {
      "get": {
        "tags": ["Boleto"],
        "summary": "Consultar Boleto",
        "description": "Consulta o status e detalhes de um boleto pelo ID",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do boleto ou externalId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do boleto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Boleto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment/{id}/cancel": {
      "patch": {
        "tags": ["Boleto"],
        "summary": "Cancelar Boleto",
        "description": "Cancela um boleto que ainda não foi pago",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do boleto a ser cancelado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Boleto cancelado com sucesso - sem conteúdo retornado"
          },
          "400": {
            "description": "Boleto não pode ser cancelado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Boleto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment/{id}/generate-pdf": {
      "post": {
        "tags": ["Boleto"],
        "summary": "Gerar PDF do Boleto",
        "description": "Gera e retorna o PDF do boleto para impressão ou envio",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do boleto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF do boleto gerado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoPdfResponse"
                }
              }
            }
          },
          "404": {
            "description": "Boleto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/business/webhook": {
      "get": {
        "tags": ["Webhooks"],
        "summary": "Obter Configuração de Webhooks",
        "description": "Recupera as URLs de webhook configuradas para cada método de pagamento",
        "security": [{ "apiKeyAuth": [] }],
        "responses": {
          "200": {
            "description": "Configuração de webhooks obtida com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookConfiguration"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Webhooks"],
        "summary": "Configurar Webhooks",
        "description": "Configura URLs de webhook para receber notificações em tempo real",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookConfiguration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhooks configurados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "URL inválida ou protocolo não HTTPS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Webhooks"],
        "summary": "Atualizar Webhooks Parcialmente",
        "description": "Atualiza uma ou mais URLs de webhook específicas",
        "security": [{ "apiKeyAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "pixWebhookUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "bankSlipWebhookUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "creditCardWebhookUrl": {
                    "type": "string",
                    "format": "uri"
                  },
                  "onboardingWebhookUrl": {
                    "type": "string",
                    "format": "uri"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhooks atualizados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookConfiguration"
                }
              }
            }
          },
          "400": {
            "description": "URL inválida ou protocolo não HTTPS",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "422": {
            "description": "Erro de validação",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/business/webhook/{product}": {
      "delete": {
        "tags": ["Webhooks"],
        "summary": "Remover Webhook Específico",
        "description": "Remove a URL de webhook de um produto específico",
        "security": [{ "apiKeyAuth": [] }],
        "parameters": [
          {
            "name": "product",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": ["pix", "bankSlip", "creditCard", "onboarding"]
            },
            "description": "Produto do qual remover o webhook"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook removido com sucesso"
          },
          "404": {
            "description": "Produto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePaymentRequest": {
        "type": "object",
        "required": ["purchaseValue", "installments", "externalId", "payment"],
        "properties": {
          "purchaseValue": {
            "type": "integer",
            "description": "Valor da compra em reais",
            "example": 100
          },
          "installments": {
            "type": "integer",
            "minimum": 1,
            "description": "Número de parcelas",
            "example": 1
          },
          "externalId": {
            "type": "string",
            "description": "ID de referência externa",
            "example": "ext-payment-12345"
          },
          "purchaseTitle": {
            "type": "string",
            "description": "Título da compra",
            "example": "Compra de Produto"
          },
          "description": {
            "type": "string",
            "description": "Descrição do pagamento",
            "example": "Descrição da compra"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer"
          },
          "buyerUuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID de comprador existente (alternativa ao objeto buyer)"
          },
          "additionalInfo": {
            "$ref": "#/components/schemas/AdditionalInfo"
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL de callback do webhook"
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "required": ["chargeType"],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": ["FEE_TO_CUSTOMER", "FEE_TO_SELLER"],
            "description": "Tipo de cobrança"
          },
          "capture": {
            "type": "boolean",
            "description": "Se deve capturar o pagamento imediatamente",
            "default": true
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "cardToken": {
            "$ref": "#/components/schemas/CardToken"
          }
        }
      },
      "Card": {
        "type": "object",
        "required": ["name", "number", "expiration", "securityCode"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do portador do cartão",
            "example": "JOSE DAS NEVES TEST"
          },
          "number": {
            "type": "string",
            "description": "Número do cartão",
            "example": "5383638854408981"
          },
          "expiration": {
            "type": "string",
            "pattern": "^(0[1-9]|1[0-2])\\/([0-9]{2})$",
            "description": "Data de expiração do cartão (MM/AA)",
            "example": "12/24"
          },
          "securityCode": {
            "type": "string",
            "description": "Código de segurança do cartão (CVV)",
            "example": "220"
          }
        }
      },
      "CardToken": {
        "type": "object",
        "required": ["cardToken"],
        "properties": {
          "cardToken": {
            "type": "string",
            "format": "uuid",
            "description": "Token do cartão salvo",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "cvv": {
            "type": "string",
            "description": "Código de segurança do cartão para pagamento com token",
            "example": "220"
          }
        }
      },
      "Buyer": {
        "type": "object",
        "required": [
          "name",
          "document",
          "email",
          "phone",
          "countryCode",
          "address"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do comprador",
            "example": "João da Silva Teste"
          },
          "document": {
            "type": "string",
            "description": "Número do documento (CPF/CNPJ)",
            "example": "11144477735"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Endereço de email",
            "example": "joao.teste@exemplo.com"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone",
            "example": "11999999999"
          },
          "countryCode": {
            "type": "string",
            "description": "Código do país com prefixo +",
            "example": "+55"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "CreateBuyerRequest": {
        "type": "object",
        "required": ["document", "name", "email", "phone"],
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do comprador",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Endereço de email principal",
            "example": "joao.teste@exemplo.com"
          },
          "countryCode": {
            "type": "string",
            "description": "Código do país com prefixo +",
            "example": "+55"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone",
            "example": "11999999999"
          },
          "alternativeEmail": {
            "type": "string",
            "format": "email",
            "description": "Endereço de email alternativo",
            "example": "joao.teste@exemplo.com"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "Document": {
        "type": "object",
        "required": ["documentNumber", "documentType", "documentNation"],
        "properties": {
          "documentNumber": {
            "type": "string",
            "description": "Número do documento",
            "example": "36880261019"
          },
          "documentType": {
            "type": "string",
            "enum": ["cpf", "cnpj"],
            "description": "Tipo de documento",
            "example": "cpf"
          },
          "documentNation": {
            "type": "string",
            "description": "Código do país do documento",
            "example": "BR"
          }
        }
      },
      "Address": {
        "type": "object",
        "required": [
          "country",
          "state",
          "city",
          "district",
          "street",
          "zipCode",
          "number"
        ],
        "properties": {
          "country": {
            "type": "string",
            "description": "Código do país",
            "example": "BR"
          },
          "state": {
            "type": "string",
            "description": "Código do estado",
            "example": "SP"
          },
          "city": {
            "type": "string",
            "description": "Nome da cidade",
            "example": "São Paulo"
          },
          "district": {
            "type": "string",
            "description": "Bairro/distrito",
            "example": "Centro"
          },
          "street": {
            "type": "string",
            "description": "Nome da rua",
            "example": "Rua das Flores"
          },
          "zipCode": {
            "type": "string",
            "description": "CEP/código postal",
            "example": "01000000"
          },
          "number": {
            "type": "string",
            "description": "Número da residência",
            "example": "220"
          },
          "complement": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Apto 45"
          }
        }
      },
      "AdditionalInfo": {
        "type": "object",
        "properties": {
          "customerIp": {
            "type": "string",
            "format": "ipv4",
            "description": "Endereço IP do cliente",
            "example": "192.168.1.100"
          }
        }
      },
      "CreateTokenRequest": {
        "type": "object",
        "required": ["card", "buyer"],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer"
          },
          "checkZeroDollar": {
            "type": "boolean",
            "description": "Se deve realizar verificação de dólar zero",
            "default": false
          }
        }
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "required": ["basicValue", "payment"],
        "properties": {
          "basicValue": {
            "$ref": "#/components/schemas/SubscriptionValue"
          },
          "payment": {
            "$ref": "#/components/schemas/SubscriptionPayment"
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer"
          },
          "buyerUuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID de comprador existente"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Data de início da assinatura",
            "example": "2024-02-01"
          },
          "externalId": {
            "type": "string",
            "description": "ID de referência externa",
            "example": "subscription-ext-456"
          },
          "description": {
            "type": "string",
            "description": "Descrição da assinatura",
            "example": "Assinatura mensal premium"
          },
          "metadata": {
            "type": "object",
            "description": "Metadados adicionais"
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL de callback do webhook"
          }
        }
      },
      "SubscriptionValue": {
        "type": "object",
        "required": ["type", "valuePerMonth"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["MONTHLY", "QUARTERLY", "ANNUALLY"],
            "description": "Frequência de cobrança"
          },
          "valuePerMonth": {
            "type": "integer",
            "description": "Valor mensal em reais",
            "example": 30
          }
        }
      },
      "AdditionalValue": {
        "type": "object",
        "required": ["type", "value"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["MONTHLY", "QUARTERLY", "ANNUALLY"],
            "description": "Frequência de cobrança adicional"
          },
          "value": {
            "type": "integer",
            "description": "Valor adicional em reais",
            "example": 5
          },
          "description": {
            "type": "string",
            "description": "Descrição do valor adicional",
            "example": "Taxa de configuração"
          }
        }
      },
      "SubscriptionPayment": {
        "type": "object",
        "required": ["method"],
        "properties": {
          "method": {
            "type": "string",
            "enum": ["CREDIT_CARD"],
            "description": "Método de pagamento"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "cardToken": {
            "$ref": "#/components/schemas/CardToken"
          }
        }
      },
      "UpdateSubscriptionRequest": {
        "type": "object",
        "properties": {
          "basicValue": {
            "$ref": "#/components/schemas/SubscriptionValue"
          }
        }
      },
      "RedeemRequest": {
        "type": "object",
        "required": ["value"],
        "properties": {
          "value": {
            "type": "integer",
            "description": "Valor do resgate em reais",
            "example": 500
          },
          "description": {
            "type": "string",
            "description": "Descrição do resgate",
            "example": "Solicitação de resgate"
          }
        }
      },
      "BarteWebhookRequest": {
        "type": "object",
        "required": ["eventType", "data"],
        "properties": {
          "eventType": {
            "type": "string",
            "description": "Tipo de evento",
            "example": "CHARGE_PAID"
          },
          "data": {
            "type": "object",
            "description": "Dados do evento"
          }
        }
      },
      "GenericWebhookRequest": {
        "type": "object",
        "required": ["eventType"],
        "properties": {
          "eventType": {
            "type": "string",
            "description": "Tipo de evento",
            "example": "PAYMENT_UPDATED"
          },
          "paymentId": {
            "type": "string",
            "description": "ID do pagamento"
          },
          "status": {
            "type": "string",
            "description": "Status do pagamento"
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do pagamento"
          },
          "status": {
            "type": "string",
            "description": "Status do pagamento"
          },
          "amount": {
            "type": "integer",
            "description": "Valor do pagamento em reais"
          },
          "installments": {
            "type": "integer",
            "description": "Número de parcelas"
          },
          "externalId": {
            "type": "string",
            "description": "ID de referência externa"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "PaymentListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentResponse"
            }
          },
          "total": {
            "type": "integer",
            "description": "Contagem total (se solicitada)"
          },
          "offset": {
            "type": "integer",
            "description": "Offset atual"
          },
          "limit": {
            "type": "integer",
            "description": "Limite atual"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "cardToken": {
            "type": "string",
            "format": "uuid",
            "description": "Token do cartão gerado"
          },
          "maskedCardNumber": {
            "type": "string",
            "description": "Número do cartão mascarado",
            "example": "****-****-****-1111"
          },
          "expirationDate": {
            "type": "string",
            "description": "Data de expiração do cartão",
            "example": "12/24"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação do token"
          }
        }
      },
      "BuyerResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID do comprador"
          },
          "name": {
            "type": "string",
            "description": "Nome do comprador"
          },
          "email": {
            "type": "string",
            "description": "Endereço de email"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID da assinatura"
          },
          "status": {
            "type": "string",
            "description": "Status da assinatura"
          },
          "planUuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID do plano"
          },
          "basicValue": {
            "$ref": "#/components/schemas/SubscriptionValue"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Data de início"
          },
          "nextBillingDate": {
            "type": "string",
            "format": "date",
            "description": "Próxima data de cobrança"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "AccountBalanceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único da conta",
            "example": "6642d54caff30523094a6584c"
          },
          "totalBalance": {
            "type": "number",
            "description": "Saldo total da conta",
            "example": 4.02
          },
          "blockedBalance": {
            "type": "number",
            "description": "Valor comprometido em saques",
            "example": 1.26
          },
          "availableBalance": {
            "type": "number",
            "description": "Saldo disponível para transações",
            "example": 2.76
          }
        },
        "required": ["id", "totalBalance", "blockedBalance", "availableBalance"]
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status de saúde",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp da verificação de saúde"
          }
        }
      },
      "RedeemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da solicitação de resgate"
          },
          "status": {
            "type": "string",
            "description": "Status do resgate"
          },
          "amount": {
            "type": "integer",
            "description": "Valor do resgate em centavos"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "integer",
            "description": "Código do erro"
          },
          "message": {
            "type": "string",
            "description": "Mensagem do erro"
          },
          "details": {
            "type": "object",
            "description": "Detalhes adicionais do erro"
          }
        }
      },
      "CreatePixPaymentRequest": {
        "type": "object",
        "required": ["transaction"],
        "properties": {
          "transaction": {
            "type": "object",
            "required": ["value"],
            "properties": {
              "value": {
                "type": "number",
                "description": "Valor da transação em reais",
                "example": 0.15,
                "minimum": 0.01
              },
              "description": {
                "type": "string",
                "description": "Descrição da transação",
                "example": "Cobrança de teste",
                "maxLength": 140
              },
              "expirationTime": {
                "type": "integer",
                "description": "Tempo de expiração em segundos",
                "example": 300
              },
              "externalId": {
                "type": "string",
                "description": "ID externo da transação",
                "example": "uuid-123"
              },
              "additionalInfo": {
                "type": "object",
                "properties": {
                  "sellerId": {
                    "type": "integer",
                    "example": 123
                  },
                  "whatsAppPhone": {
                    "type": "string",
                    "example": "37988996655"
                  }
                }
              }
            }
          },
          "payer": {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string",
                "description": "Nome completo do pagador",
                "example": "John Marvin"
              },
              "document": {
                "type": "string",
                "description": "CPF/CNPJ do pagador",
                "example": "12312312387"
              }
            }
          },
          "splits": {
            "type": "array",
            "description": "Divisão de valores entre múltiplos recebedores",
            "items": {
              "type": "object",
              "properties": {
                "walletId": {
                  "type": "string",
                  "example": "wallet_123"
                },
                "amount": {
                  "type": "number",
                  "example": 50.0
                },
                "percentage": {
                  "type": "number",
                  "example": 33.33
                }
              }
            }
          },
          "callback_url": {
            "type": "string",
            "format": "uri",
            "description": "URL para receber webhooks específicos desta transação"
          },
          "metadata": {
            "type": "object",
            "description": "Dados adicionais da transação",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "CreatePixWithdrawRequest": {
        "type": "object",
        "required": ["type", "value", "details"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["PIX"],
            "description": "Tipo da operação: sempre PIX"
          },
          "value": {
            "type": "number",
            "description": "Valor da transferência em reais",
            "example": 15,
            "minimum": 0.01
          },
          "details": {
            "type": "object",
            "required": ["key", "keyType", "name", "document"],
            "properties": {
              "key": {
                "type": "string",
                "description": "Chave PIX do beneficiário",
                "example": "12312312387"
              },
              "keyType": {
                "type": "string",
                "enum": ["DOCUMENT", "EMAIL", "PHONE", "RANDOM"],
                "description": "Tipo da chave PIX"
              },
              "name": {
                "type": "string",
                "description": "Nome completo do beneficiário",
                "example": "John Marvin"
              },
              "document": {
                "type": "string",
                "description": "CPF ou CNPJ do beneficiário (apenas números)",
                "example": "12312312387"
              }
            }
          },
          "externalId": {
            "type": "string",
            "description": "Identificador único da transferência em seu sistema",
            "example": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
          }
        }
      },
      "PixRefundRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Valor do estorno em reais. Se não informado, será estorno total",
            "minimum": 0.01
          },
          "description": {
            "type": "string",
            "description": "Descrição do motivo do estorno"
          }
        }
      },
      "PixBuyer": {
        "type": "object",
        "required": ["name", "document"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do pagador",
            "example": "Maria Silva Santos"
          },
          "document": {
            "type": "string",
            "description": "CPF ou CNPJ do pagador (apenas números)",
            "example": "12345678901"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do pagador para notificações",
            "example": "maria@email.com"
          },
          "phone": {
            "type": "string",
            "description": "Telefone do pagador",
            "example": "11999999999"
          }
        }
      },
      "PixWithdrawDetails": {
        "type": "object",
        "required": ["key", "keyType", "name", "document"],
        "properties": {
          "key": {
            "type": "string",
            "description": "Chave PIX do beneficiário",
            "example": "usuario@email.com"
          },
          "keyType": {
            "type": "string",
            "enum": ["DOCUMENT", "EMAIL", "PHONE", "RANDOM_KEY"],
            "description": "Tipo da chave PIX"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do beneficiário",
            "example": "Ana Silva Santos"
          },
          "document": {
            "type": "string",
            "description": "CPF ou CNPJ do beneficiário (apenas números)",
            "example": "12345678901"
          }
        }
      },
      "PixSplit": {
        "type": "object",
        "required": ["recipient_id", "type", "value"],
        "properties": {
          "recipient_id": {
            "type": "string",
            "description": "ID do beneficiário"
          },
          "type": {
            "type": "string",
            "enum": ["percentage", "fixed_amount"],
            "description": "Tipo de divisão"
          },
          "value": {
            "type": "number",
            "description": "Valor (% para percentage, R$ para fixed_amount)"
          },
          "description": {
            "type": "string",
            "description": "Descrição da participação"
          }
        }
      },
      "PixPaymentResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID único da transação PIX no FireBanking",
            "example": "cd722e93-032f-45e1-b638-87a2490dcea7"
          },
          "status": {
            "type": "string",
            "enum": [
              "WAITING_PAYMENT",
              "PAID",
              "EXPIRED",
              "CANCELLED",
              "REFUNDED"
            ],
            "description": "Status atual da transação",
            "example": "WAITING_PAYMENT"
          },
          "pixQrCode": {
            "type": "string",
            "description": "QR Code em formato base64 (PNG) para exibição",
            "example": "iVBORw0KGgoAAAANSUhEUgAABbQAAAW0CAYAAAAeooXXAAAABGdBTUEAALGPC/xhBQ..."
          },
          "pixCode": {
            "type": "string",
            "description": "Código PIX Copia e Cola para pagamento",
            "example": "00020101021226880014br.gov.bcb.pix2566qrcode-h.firebanking.com.br/QR/cob/EEA7B851BBAFFB546073CE80810F56AA0F95204000053039865802BR5925VICTOR NERY TEIXEIRA CONS6009Sao Paulo610905726-10062070503***630498E0"
          },
          "generateTime": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de geração da cobrança (ISO 8601)",
            "example": "2024-04-14T02:58:04.997Z"
          },
          "expirationDate": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de expiração da cobrança (ISO 8601)",
            "example": "2024-04-15T02:58:04.997Z"
          },
          "paymentLink": {
            "type": "string",
            "format": "uri",
            "description": "Link direto para pagamento (ideal para WhatsApp/email)",
            "example": "https://pay.firebanking.com.br/cd722e93-032f-45e1-b638-87a2490dcea7"
          }
        },
        "required": [
          "transactionId",
          "status",
          "pixQrCode",
          "pixCode",
          "generateTime",
          "expirationDate",
          "paymentLink"
        ]
      },
      "PixWithdrawResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID único da transferência no FireBanking",
            "example": "75906707-8c31-479c-b354-aa805c4cefbc"
          },
          "status": {
            "type": "string",
            "enum": ["WAITING_CONFIRMATION", "WITHDRAW_PAID", "ERROR"],
            "description": "Status da transferência",
            "example": "WAITING_CONFIRMATION"
          }
        },
        "required": ["transactionId", "status"]
      },
      "PixRefundResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID único do estorno",
            "example": "75906707-8c31-479c-b354-aa805c4cefbc"
          }
        },
        "required": ["transactionId"]
      },
      "PixTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único da transação PIX no FireBanking"
          },
          "externalId": {
            "type": "string",
            "description": "ID externo fornecido na criação da transação"
          },
          "businessId": {
            "type": "string",
            "description": "ID da empresa/negócio no FireBanking"
          },
          "endToEndId": {
            "type": "string",
            "nullable": true,
            "description": "Identificador fim-a-fim da transação PIX (apenas para transações processadas)"
          },
          "operation": {
            "type": "object",
            "properties": {
              "provider": {
                "type": "string",
                "description": "Provedor de pagamento utilizado"
              },
              "type": {
                "type": "string",
                "enum": ["PAYMENT", "WITHDRAW"],
                "description": "Tipo da operação: PAYMENT (cobrança) ou WITHDRAW (transferência)"
              },
              "status": {
                "type": "string",
                "enum": [
                  "WAITING_PAYMENT",
                  "PAID",
                  "WITHDRAW_PAID",
                  "EXPIRED",
                  "CANCELLED",
                  "REFUNDED"
                ],
                "description": "Status atual da transação"
              },
              "value": {
                "type": "number",
                "description": "Valor da transação em reais"
              },
              "fee": {
                "type": "number",
                "description": "Taxa cobrada pela transação"
              },
              "finalValue": {
                "type": "number",
                "description": "Valor final líquido da transação"
              },
              "refundValue": {
                "type": "number",
                "description": "Valor do estorno (se aplicável)"
              },
              "description": {
                "type": "string",
                "description": "Descrição da transação"
              },
              "additionalInfo": {
                "type": "object",
                "description": "Informações adicionais da transação"
              }
            }
          },
          "negotiator": {
            "type": "object",
            "properties": {
              "fullName": {
                "type": "string",
                "description": "Nome completo do solicitante"
              },
              "document": {
                "type": "string",
                "description": "CPF/CNPJ mascarado do solicitante"
              }
            }
          },
          "payer": {
            "type": "object",
            "nullable": true,
            "description": "Dados do pagador (apenas para transações pagas)",
            "properties": {
              "fullName": {
                "type": "string",
                "description": "Nome completo do pagador"
              },
              "document": {
                "type": "string",
                "description": "CPF/CNPJ mascarado do pagador"
              }
            }
          },
          "receiver": {
            "type": "object",
            "nullable": true,
            "description": "Dados do recebedor (apenas para transferências)",
            "properties": {
              "name": {
                "type": "string",
                "description": "Nome do recebedor"
              },
              "document": {
                "type": "string",
                "description": "CPF/CNPJ mascarado do recebedor"
              },
              "bankName": {
                "type": "string",
                "description": "Nome do banco do recebedor"
              },
              "pixKey": {
                "type": "string",
                "description": "Chave PIX do recebedor"
              },
              "pixKeyType": {
                "type": "string",
                "enum": ["DOCUMENT", "EMAIL", "PHONE", "RANDOM"],
                "description": "Tipo da chave PIX"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de criação da transação (ISO 8601)"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora da última atualização da transação (ISO 8601)"
          }
        }
      },
      "PixTransactionListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PixTransactionResponse"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "pages": {
                "type": "integer"
              }
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "total_transactions": {
                "type": "integer"
              },
              "total_cash_in": {
                "type": "integer"
              },
              "total_cash_out": {
                "type": "integer"
              },
              "total_value": {
                "type": "integer"
              },
              "total_fees": {
                "type": "integer"
              }
            }
          }
        }
      },
      "PixQRCode": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Código PIX Copia e Cola"
          },
          "image": {
            "type": "string",
            "description": "QR Code em formato base64 (PNG)"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de expiração do QR Code"
          }
        }
      },
      "PixBeneficiary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "keyType": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/BankInfo"
          }
        }
      },
      "PixPayer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/BankInfo"
          }
        }
      },
      "BankInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "ispb": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "account": {
            "type": "string"
          }
        }
      },
      "CreateBoletoRequest": {
        "type": "object",
        "required": ["amount", "dueDate", "payer"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Valor do boleto em reais",
            "example": 1899.75,
            "minimum": 0.01
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "description": "Data de vencimento do boleto (YYYY-MM-DD)",
            "example": "2025-04-15"
          },
          "payer": {
            "$ref": "#/components/schemas/BoletoPayer"
          },
          "externalId": {
            "type": "string",
            "description": "Identificador único do boleto em seu sistema",
            "example": "a7c1e3b5-8f42-45d6-9b3c-1d5f98a0d123"
          },
          "description": {
            "type": "string",
            "description": "Descrição do boleto/finalidade do pagamento",
            "example": "Pagamento referente à mensalidade do serviço contratado"
          },
          "instructions": {
            "type": "object",
            "description": "Configurações de multa e juros",
            "properties": {
              "interest": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["PERCENTAGE", "FIXED"],
                    "description": "Tipo de juros"
                  },
                  "value": {
                    "type": "number",
                    "description": "Valor do juros"
                  }
                }
              },
              "fine": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["PERCENTAGE", "FIXED"],
                    "description": "Tipo de multa"
                  },
                  "value": {
                    "type": "number",
                    "description": "Valor da multa"
                  }
                }
              }
            },
            "example": {
              "interest": {
                "type": "PERCENTAGE",
                "value": 10
              },
              "fine": {
                "type": "PERCENTAGE",
                "value": 0.2
              }
            }
          },
          "callback_url": {
            "type": "string",
            "format": "uri",
            "description": "URL para receber webhooks específicos deste boleto"
          },
          "metadata": {
            "type": "object",
            "description": "Dados adicionais do boleto",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BoletoPayer": {
        "type": "object",
        "required": [
          "name",
          "document",
          "city",
          "state",
          "number",
          "postalCode",
          "neighborhood",
          "publicArea"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do pagador",
            "example": "CARLOS EDUARDO MENDES"
          },
          "document": {
            "type": "string",
            "description": "CPF ou CNPJ do pagador",
            "example": "315.472.689-01"
          },
          "city": {
            "type": "string",
            "description": "Cidade",
            "example": "SÃO PAULO"
          },
          "state": {
            "type": "string",
            "description": "Estado (UF)",
            "example": "SP"
          },
          "number": {
            "type": "string",
            "description": "Número do endereço",
            "example": "1024"
          },
          "postalCode": {
            "type": "string",
            "description": "CEP",
            "example": "04119001"
          },
          "neighborhood": {
            "type": "string",
            "description": "Bairro",
            "example": "VILA MARIANA"
          },
          "publicArea": {
            "type": "string",
            "description": "Logradouro/rua",
            "example": "RUA DOMINGOS DE MORAIS"
          }
        }
      },
      "BoletoResponse": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do boleto no FireBanking",
            "example": "3f73ad66-04cb-4c2d-9520-e41e41c576cc"
          }
        }
      },
      "BoletoDetailsResponse": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "description": "Valor do boleto em reais",
            "example": "850.75"
          },
          "description": {
            "type": "string",
            "description": "Descrição do boleto",
            "example": "Pagamento referente à fatura de serviços prestados no mês de março"
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "description": "Data de vencimento",
            "example": "2025-04-10"
          },
          "externalId": {
            "type": "string",
            "description": "Seu identificador único do boleto",
            "example": "EXT987654321"
          },
          "id": {
            "type": "string",
            "description": "ID único do boleto no FireBanking",
            "example": "a7b8c9d0-1234-5678-abcd-efghijklmnop"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time",
            "description": "Data de pagamento",
            "example": "2023-08-15T09:30:00.000Z"
          },
          "status": {
            "type": "string",
            "enum": ["PENDING", "CONFIRMED", "PAID", "EXPIRED", "CANCELLED"],
            "description": "Status atual do boleto",
            "example": "PAID"
          },
          "barcode": {
            "type": "string",
            "description": "Código de barras do boleto",
            "example": "34198103400001850700125005310145678965430000"
          },
          "slipLine": {
            "type": "string",
            "description": "Linha digitável do boleto",
            "example": "34191090090518507634567890000003810290000850750"
          },
          "issuingBank": {
            "type": "string",
            "description": "Banco emissor do boleto",
            "example": "bradesco"
          },
          "pixCode": {
            "type": "string",
            "description": "Código PIX do boleto",
            "example": "00020101021226980014br.gov.bcb.pix2576qrcode-h.pix.celcoin.com.br/pixqrcode/v2/cobv/9e30b4fcb8ef234b1c5a7e9f6dff62214000053039865802BR5924Servicos Exemplares Ltda6007SaoPaulo62070503***6304DEFG"
          },
          "transactions": {
            "type": "array",
            "description": "Lista de transações relacionadas ao boleto",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID da transação",
                  "example": "b8d7e6a5-1234-5678-abcd-9876543210fe"
                },
                "status": {
                  "type": "string",
                  "enum": ["PENDING", "WAITING_PAYMENT", "PAID", "CANCELLED"],
                  "description": "Status da transação",
                  "example": "PENDING"
                }
              }
            }
          },
          "instructions": {
            "type": "object",
            "description": "Instruções de multa e juros",
            "properties": {
              "fine": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["PERCENTAGE", "FIXED"],
                    "description": "Tipo de multa",
                    "example": "PERCENTAGE"
                  },
                  "value": {
                    "type": "string",
                    "description": "Valor da multa",
                    "example": "0.5"
                  }
                }
              },
              "interest": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": ["PERCENTAGE", "FIXED"],
                    "description": "Tipo de juros",
                    "example": "PERCENTAGE"
                  },
                  "value": {
                    "type": "string",
                    "description": "Valor dos juros",
                    "example": "12"
                  }
                }
              }
            }
          },
          "pdfUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para download do PDF do boleto",
            "example": "https://s3.us-east-1.amazonaws.com/dev..."
          },
          "payer": {
            "type": "object",
            "description": "Dados do pagador",
            "properties": {
              "city": {
                "type": "string",
                "description": "Cidade",
                "example": "SAO PAULO"
              },
              "name": {
                "type": "string",
                "description": "Nome do pagador",
                "example": "JULIANO PEREIRA SILVA"
              },
              "document": {
                "type": "string",
                "description": "Documento do pagador",
                "example": "12345678901"
              },
              "neighborhood": {
                "type": "string",
                "description": "Bairro",
                "example": "PONTE GRANDE"
              },
              "number": {
                "type": "string",
                "description": "Número do endereço",
                "example": "2500"
              },
              "postalCode": {
                "type": "string",
                "description": "CEP",
                "example": "03367010"
              },
              "publicArea": {
                "type": "string",
                "description": "Logradouro",
                "example": "AV. RIO DAS PEDRAS"
              },
              "state": {
                "type": "string",
                "description": "Estado",
                "example": "SP"
              }
            }
          }
        }
      },
      "BoletoCancelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do boleto cancelado"
          },
          "status": {
            "type": "string",
            "example": "cancelled"
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e hora do cancelamento"
          },
          "message": {
            "type": "string",
            "description": "Mensagem de confirmação",
            "example": "Boleto cancelado com sucesso"
          }
        }
      },
      "BoletoPdfResponse": {
        "type": "object",
        "properties": {
          "pdfAccessUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para download do PDF do boleto",
            "example": "https://s3.us-east-1.amazonaws.com/dev..."
          }
        }
      },
      "BoletoPaymentInfo": {
        "type": "object",
        "properties": {
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "Data do pagamento"
          },
          "paymentAmount": {
            "type": "number",
            "description": "Valor pago (pode incluir juros/multa)"
          },
          "paymentType": {
            "type": "string",
            "description": "Tipo de pagamento (débito, dinheiro, etc.)"
          },
          "bank": {
            "type": "string",
            "description": "Banco onde foi pago"
          },
          "agency": {
            "type": "string",
            "description": "Agência bancária"
          }
        }
      },
      "BoletoWebhookPayload": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "enum": ["boleto.confirmed", "boleto.paid", "boleto.cancelled"],
            "description": "Tipo do evento"
          },
          "boleto_id": {
            "type": "string",
            "description": "ID do boleto"
          },
          "external_id": {
            "type": "string",
            "description": "ID externo do boleto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp do evento"
          },
          "data": {
            "type": "object",
            "description": "Dados específicos do evento",
            "properties": {
              "id": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date"
              },
              "payment_info": {
                "$ref": "#/components/schemas/BoletoPaymentInfo"
              }
            }
          },
          "webhook": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "attempt": {
                "type": "integer"
              },
              "max_attempts": {
                "type": "integer"
              }
            }
          }
        }
      },
      "WebhookConfiguration": {
        "type": "object",
        "properties": {
          "pixWebhookUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para webhooks do PIX (Cash In e Cash Out)",
            "example": "https://meusite.com/webhooks/pix"
          },
          "bankSlipWebhookUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para webhooks de Boleto",
            "example": "https://meusite.com/webhooks/boleto"
          },
          "creditCardWebhookUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para webhooks de Cartão de Crédito",
            "example": "https://meusite.com/webhooks/cartao"
          },
          "onboardingWebhookUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para webhooks de Onboarding (contas específicas)",
            "example": "https://meusite.com/webhooks/onboarding"
          }
        }
      },
      "WebhookPayload": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "description": "Tipo do evento",
            "enum": [
              "payment.authorized",
              "payment.captured",
              "payment.failed",
              "payment.expired",
              "payment.refunded",
              "payment.cancelled",
              "subscription.created",
              "subscription.payment_successful",
              "subscription.payment_failed",
              "subscription.cancelled",
              "subscription.suspended",
              "pix.charge.created",
              "pix.charge.paid",
              "pix.charge.expired",
              "pix.charge.cancelled",
              "pix.withdraw.created",
              "pix.withdraw.processed",
              "pix.withdraw.failed",
              "pix.withdraw.cancelled",
              "bankslip.created",
              "bankslip.paid",
              "bankslip.expired",
              "bankslip.cancelled",
              "onboarding.started",
              "onboarding.completed",
              "onboarding.rejected",
              "onboarding.pending_documents"
            ]
          },
          "transaction_id": {
            "type": "string",
            "description": "ID da transação"
          },
          "external_id": {
            "type": "string",
            "description": "ID externo da transação"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp do evento"
          },
          "data": {
            "type": "object",
            "description": "Dados específicos do evento"
          },
          "webhook": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "ID do webhook"
              },
              "attempt": {
                "type": "integer",
                "description": "Número da tentativa"
              },
              "max_attempts": {
                "type": "integer",
                "description": "Máximo de tentativas"
              }
            }
          }
        },
        "required": ["event", "transaction_id", "timestamp", "data"]
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Chave de API para autenticação"
      }
    }
  }
}
