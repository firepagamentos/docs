{
  "openapi": "3.1.0",
  "info": {
    "title": "API FireBanking",
    "description": "API abrangente para processamento de pagamentos, incluindo cartão de crédito, PIX, pagamentos instantâneos, assinaturas, gestão de compradores e muito mais.",
    "version": "1.0.0",
    "contact": {
      "name": "Suporte da API FireBanking",
      "url": "https://firebanking.com/support",
      "email": "api-support@firebanking.com"
    }
  },
  "servers": [
    {
      "url": "https://api-gateway.firebanking.dev",
      "description": "Servidor de teste (sandbox)"
    },
    {
      "url": "https://api-gateway.firebanking.com.br",
      "description": "Servidor de produção"
    }
  ],
  "security": [
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/credit-card/v1/payment": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Criar Pagamento",
        "description": "Criar um novo pagamento com dados do cartão ou token do cartão",
        "security": [{"apiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pagamento criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Pagamento"],
        "summary": "Listar Pagamentos",
        "description": "Obter uma lista de pagamentos com paginação",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "Número de itens a pular",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Número máximo de itens a retornar",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Incluir contagem total na resposta",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamentos recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/token": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Criar Token de Cartão",
        "description": "Criar um token reutilizável e seguro para um cartão de crédito",
        "security": [{"apiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token de cartão criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/token/{buyerUuid}": {
      "get": {
        "tags": ["Pagamento"],
        "summary": "Obter Tokens de Cartão por Comprador",
        "description": "Recuperar todos os tokens de cartão para um comprador específico",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "buyerUuid",
            "in": "path",
            "required": true,
            "description": "UUID do comprador",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tokens de cartão recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TokenResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}": {
      "get": {
        "tags": ["Pagamento"],
        "summary": "Obter Pagamento por ID",
        "description": "Recuperar um pagamento específico pelo seu ID",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}/capture": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Capturar Pagamento",
        "description": "Capturar um pagamento pré-autorizado",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento a capturar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento capturado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}/refund": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Estornar Pagamento",
        "description": "Estornar um pagamento completado",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento a estornar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pagamento estornado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/payment/{paymentId}/cancel-capture": {
      "post": {
        "tags": ["Pagamento"],
        "summary": "Cancelar Pré-Autorização",
        "description": "Cancelar um pagamento pré-autorizado",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "paymentId",
            "in": "path",
            "required": true,
            "description": "ID do pagamento a cancelar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pré-autorização cancelada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/buyer": {
      "post": {
        "tags": ["Comprador"],
        "summary": "Criar Comprador",
        "description": "Criar um novo registro de comprador",
        "security": [{"apiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBuyerRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Comprador criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Comprador"],
        "summary": "Listar Compradores",
        "description": "Obter uma lista de compradores com filtros opcionais",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "document",
            "in": "query",
            "description": "Filtrar por número de documento",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filtrar por nome do comprador",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Filtrar por endereço de email",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página para paginação",
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "Número de itens por página",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Compradores recuperados com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BuyerResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/buyer/{buyerUuid}": {
      "get": {
        "tags": ["Comprador"],
        "summary": "Obter Comprador por ID",
        "description": "Recuperar um comprador específico pelo seu UUID",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "buyerUuid",
            "in": "path",
            "required": true,
            "description": "UUID do comprador",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Comprador recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BuyerResponse"
                }
              }
            }
          },
          "404": {
            "description": "Comprador não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/subscription": {
      "post": {
        "tags": ["Assinatura"],
        "summary": "Criar Assinatura",
        "description": "Criar uma nova assinatura",
        "security": [{"apiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assinatura criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/subscription/{subscriptionId}": {
      "delete": {
        "tags": ["Assinatura"],
        "summary": "Cancelar Assinatura",
        "description": "Cancelar uma assinatura ativa",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "ID da assinatura a cancelar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Assinatura cancelada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": ["Assinatura"],
        "summary": "Atualizar Assinatura",
        "description": "Atualizar frequência de cobrança ou valor da assinatura",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "description": "ID da assinatura a atualizar",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubscriptionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assinatura atualizada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubscriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/account/balance": {
      "get": {
        "tags": ["Conta"],
        "summary": "Obter Saldo da Conta",
        "description": "Recuperar saldo atual da conta",
        "security": [{"apiKeyAuth": []}],
        "responses": {
          "200": {
            "description": "Saldo da conta recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/credit-card/v1/health": {
      "get": {
        "tags": ["Sistema"],
        "summary": "Verificação de Saúde",
        "description": "Verificar status de saúde da API",
        "responses": {
          "200": {
            "description": "API está saudável",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/barte-a9b484fc-90a6-4255-9394-e3c1ca0633b9-webhook": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Webhook Específico do Barte",
        "description": "Endpoint de webhook para eventos específicos do Barte",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BarteWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processado com sucesso"
          }
        }
      }
    },
    "/webhooks/BARTE": {
      "post": {
        "tags": ["Webhooks"],
        "summary": "Webhook Genérico de Provedor",
        "description": "Endpoint de webhook genérico para eventos de provedor",
        "security": [{"basicAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenericWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook processado com sucesso"
          }
        }
      }
    },
    "/internal/manager/barte/{sellerId}/balance": {
      "get": {
        "tags": ["Interno"],
        "summary": "Obter Saldo do Barte",
        "description": "Obter saldo para um vendedor Barte (uso interno)",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "sellerId",
            "in": "path",
            "required": true,
            "description": "ID do vendedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Saldo recuperado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          }
        }
      }
    },
    "/internal/manager/barte/{sellerId}/redeems": {
      "post": {
        "tags": ["Interno"],
        "summary": "Solicitar Resgate do Barte",
        "description": "Solicitar um resgate para um vendedor Barte (uso interno)",
        "security": [{"basicAuth": []}],
        "parameters": [
          {
            "name": "sellerId",
            "in": "path",
            "required": true,
            "description": "ID do vendedor",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RedeemRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Resgate solicitado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RedeemResponse"
                }
              }
            }
          }
        }
      }
    },
    "/internal/payment/{businessId}": {
      "post": {
        "tags": ["Interno"],
        "summary": "Criar Pagamento Interno",
        "description": "Criar pagamento usando chave de API interna",
        "security": [{"internalToken": []}],
        "parameters": [
          {
            "name": "businessId",
            "in": "path",
            "required": true,
            "description": "ID do negócio",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Pagamento criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment": {
      "post": {
        "tags": ["PIX"],
        "summary": "Criar Cobrança PIX",
        "description": "Cria uma cobrança PIX com QR Code dinâmico ou por chave PIX",
        "security": [{"apiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePixPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Cobrança PIX criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment/{id}": {
      "get": {
        "tags": ["PIX"],
        "summary": "Consultar Transação PIX",
        "description": "Consulta o status e detalhes de uma transação PIX",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID da transação PIX ou externalId",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Tipo de busca: internal ou external",
            "schema": {
              "type": "string",
              "enum": ["internal", "external"],
              "default": "internal"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes da transação PIX",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixTransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Transação não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment/withdraw": {
      "post": {
        "tags": ["PIX"],
        "summary": "Criar Transferência PIX",
        "description": "Realiza transferências PIX para chaves PIX ou contas bancárias",
        "security": [{"apiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePixWithdrawRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transferência PIX criada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixWithdrawResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/payment/refund/{id}": {
      "post": {
        "tags": ["PIX"],
        "summary": "Estornar Transação PIX",
        "description": "Solicita o estorno de uma transação PIX paga",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID da transação PIX a ser estornada",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PixRefundRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Estorno processado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixRefundResponse"
                }
              }
            }
          },
          "400": {
            "description": "Transação não elegível para estorno",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/pix/v2/transactions": {
      "get": {
        "tags": ["PIX"],
        "summary": "Listar Transações PIX",
        "description": "Lista todas as transações PIX com filtros avançados",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Número da página",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Itens por página",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Tipo de transação",
            "schema": {
              "type": "string",
              "enum": ["cash_in", "cash_out", "all"],
              "default": "all"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status da transação",
            "schema": {
              "type": "string",
              "enum": ["paid", "waiting_payment", "expired", "cancelled", "refund_in"]
            }
          },
          {
            "name": "start_date",
            "in": "query",
            "description": "Data de início (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end_date",
            "in": "query",
            "description": "Data de fim (ISO 8601)",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lista de transações PIX",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PixTransactionListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment": {
      "post": {
        "tags": ["Boleto"],
        "summary": "Criar Boleto",
        "description": "Cria um novo boleto bancário com dados do pagador e prazo de vencimento",
        "security": [{"apiKeyAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBoletoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Boleto criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Não autorizado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment/{id}": {
      "get": {
        "tags": ["Boleto"],
        "summary": "Consultar Boleto",
        "description": "Consulta o status e detalhes de um boleto pelo ID",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do boleto ou externalId",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalhes do boleto",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoDetailsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Boleto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment/{id}/cancel": {
      "patch": {
        "tags": ["Boleto"],
        "summary": "Cancelar Boleto",
        "description": "Cancela um boleto que ainda não foi pago",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do boleto a ser cancelado",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Boleto cancelado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoCancelResponse"
                }
              }
            }
          },
          "400": {
            "description": "Boleto não pode ser cancelado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/bank-slip/v1/payment/{id}/generate-pdf": {
      "post": {
        "tags": ["Boleto"],
        "summary": "Gerar PDF do Boleto",
        "description": "Gera e retorna o PDF do boleto para impressão ou envio",
        "security": [{"apiKeyAuth": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID do boleto",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "PDF do boleto gerado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BoletoPdfResponse"
                }
              }
            }
          },
          "404": {
            "description": "Boleto não encontrado",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreatePaymentRequest": {
        "type": "object",
        "required": ["purchaseValue", "installments", "externalId", "payment"],
        "properties": {
          "purchaseValue": {
            "type": "integer",
            "description": "Valor da compra em reais",
            "example": 100
          },
          "installments": {
            "type": "integer",
            "minimum": 1,
            "description": "Número de parcelas",
            "example": 1
          },
          "externalId": {
            "type": "string",
            "description": "ID de referência externa",
            "example": "ext-payment-12345"
          },
          "purchaseTitle": {
            "type": "string",
            "description": "Título da compra",
            "example": "Compra de Produto"
          },
          "description": {
            "type": "string",
            "description": "Descrição do pagamento",
            "example": "Descrição da compra"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer"
          },
          "buyerUuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID de comprador existente (alternativa ao objeto buyer)"
          },
          "additionalInfo": {
            "$ref": "#/components/schemas/AdditionalInfo"
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL de callback do webhook"
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "required": ["chargeType"],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": ["FEE_TO_CUSTOMER", "FEE_TO_SELLER"],
            "description": "Tipo de cobrança"
          },
          "capture": {
            "type": "boolean",
            "description": "Se deve capturar o pagamento imediatamente",
            "default": true
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "cardToken": {
            "$ref": "#/components/schemas/CardToken"
          }
        }
      },
      "Card": {
        "type": "object",
        "required": ["name", "number", "expiration", "securityCode"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome do portador do cartão",
            "example": "JOSE DAS NEVES TEST"
          },
          "number": {
            "type": "string",
            "description": "Número do cartão",
            "example": "5383638854408981"
          },
          "expiration": {
            "type": "string",
            "pattern": "^(0[1-9]|1[0-2])\\/([0-9]{2})$",
            "description": "Data de expiração do cartão (MM/AA)",
            "example": "12/24"
          },
          "securityCode": {
            "type": "string",
            "description": "Código de segurança do cartão (CVV)",
            "example": "220"
          }
        }
      },
      "CardToken": {
        "type": "object",
        "required": ["cardToken"],
        "properties": {
          "cardToken": {
            "type": "string",
            "format": "uuid",
            "description": "Token do cartão salvo",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "cvv": {
            "type": "string",
            "description": "Código de segurança do cartão para pagamento com token",
            "example": "220"
          }
        }
      },
      "Buyer": {
        "type": "object",
        "required": ["name", "document", "email", "phone", "countryCode", "address"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do comprador",
            "example": "João da Silva Teste"
          },
          "document": {
            "type": "string",
            "description": "Número do documento (CPF/CNPJ)",
            "example": "11144477735"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Endereço de email",
            "example": "joao.teste@exemplo.com"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone",
            "example": "11999999999"
          },
          "countryCode": {
            "type": "string",
            "description": "Código do país com prefixo +",
            "example": "+55"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "CreateBuyerRequest": {
        "type": "object",
        "required": ["document", "name", "email", "phone"],
        "properties": {
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do comprador",
            "example": "João Silva"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Endereço de email principal",
            "example": "joao.teste@exemplo.com"
          },
          "countryCode": {
            "type": "string",
            "description": "Código do país com prefixo +",
            "example": "+55"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone",
            "example": "11999999999"
          },
          "alternativeEmail": {
            "type": "string",
            "format": "email",
            "description": "Endereço de email alternativo",
            "example": "joao.teste@exemplo.com"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "Document": {
        "type": "object",
        "required": ["documentNumber", "documentType", "documentNation"],
        "properties": {
          "documentNumber": {
            "type": "string",
            "description": "Número do documento",
            "example": "36880261019"
          },
          "documentType": {
            "type": "string",
            "enum": ["cpf", "cnpj"],
            "description": "Tipo de documento",
            "example": "cpf"
          },
          "documentNation": {
            "type": "string",
            "description": "Código do país do documento",
            "example": "BR"
          }
        }
      },
      "Address": {
        "type": "object",
        "required": ["country", "state", "city", "district", "street", "zipCode", "number"],
        "properties": {
          "country": {
            "type": "string",
            "description": "Código do país",
            "example": "BR"
          },
          "state": {
            "type": "string",
            "description": "Código do estado",
            "example": "SP"
          },
          "city": {
            "type": "string",
            "description": "Nome da cidade",
            "example": "São Paulo"
          },
          "district": {
            "type": "string",
            "description": "Bairro/distrito",
            "example": "Centro"
          },
          "street": {
            "type": "string",
            "description": "Nome da rua",
            "example": "Rua das Flores"
          },
          "zipCode": {
            "type": "string",
            "description": "CEP/código postal",
            "example": "01000000"
          },
          "number": {
            "type": "string",
            "description": "Número da residência",
            "example": "220"
          },
          "complement": {
            "type": "string",
            "description": "Complemento do endereço",
            "example": "Apto 45"
          }
        }
      },
      "AdditionalInfo": {
        "type": "object",
        "properties": {
          "customerIp": {
            "type": "string",
            "format": "ipv4",
            "description": "Endereço IP do cliente",
            "example": "192.168.1.100"
          }
        }
      },
      "CreateTokenRequest": {
        "type": "object",
        "required": ["card", "buyer"],
        "properties": {
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer"
          },
          "checkZeroDollar": {
            "type": "boolean",
            "description": "Se deve realizar verificação de dólar zero",
            "default": false
          }
        }
      },
      "CreateSubscriptionRequest": {
        "type": "object",
        "required": ["uuidPlan", "basicValue", "payment"],
        "properties": {
          "uuidPlan": {
            "type": "string",
            "format": "uuid",
            "description": "UUID do plano da assinatura",
            "example": "plan-uuid-12345"
          },
          "basicValue": {
            "$ref": "#/components/schemas/SubscriptionValue"
          },
          "additionalValue": {
            "$ref": "#/components/schemas/AdditionalValue"
          },
          "payment": {
            "$ref": "#/components/schemas/SubscriptionPayment"
          },
          "buyer": {
            "$ref": "#/components/schemas/Buyer"
          },
          "buyerUuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID de comprador existente"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Data de início da assinatura",
            "example": "2024-02-01"
          },
          "externalId": {
            "type": "string",
            "description": "ID de referência externa",
            "example": "subscription-ext-456"
          },
          "description": {
            "type": "string",
            "description": "Descrição da assinatura",
            "example": "Assinatura mensal premium"
          },
          "metadata": {
            "type": "object",
            "description": "Metadados adicionais"
          },
          "callbackUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL de callback do webhook"
          }
        }
      },
      "SubscriptionValue": {
        "type": "object",
        "required": ["type", "valuePerMonth"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["MONTHLY", "QUARTERLY", "ANNUALLY"],
            "description": "Frequência de cobrança"
          },
          "valuePerMonth": {
            "type": "integer",
            "description": "Valor mensal em reais",
            "example": 30
          }
        }
      },
      "AdditionalValue": {
        "type": "object",
        "required": ["type", "value"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["MONTHLY", "QUARTERLY", "ANNUALLY"],
            "description": "Frequência de cobrança adicional"
          },
          "value": {
            "type": "integer",
            "description": "Valor adicional em reais",
            "example": 5
          },
          "description": {
            "type": "string",
            "description": "Descrição do valor adicional",
            "example": "Taxa de configuração"
          }
        }
      },
      "SubscriptionPayment": {
        "type": "object",
        "required": ["method"],
        "properties": {
          "method": {
            "type": "string",
            "enum": ["CREDIT_CARD"],
            "description": "Método de pagamento"
          },
          "card": {
            "$ref": "#/components/schemas/Card"
          },
          "cardToken": {
            "$ref": "#/components/schemas/CardToken"
          }
        }
      },
      "UpdateSubscriptionRequest": {
        "type": "object",
        "properties": {
          "basicValue": {
            "$ref": "#/components/schemas/SubscriptionValue"
          }
        }
      },
      "RedeemRequest": {
        "type": "object",
        "required": ["value"],
        "properties": {
          "value": {
            "type": "integer",
            "description": "Valor do resgate em reais",
            "example": 500
          },
          "description": {
            "type": "string",
            "description": "Descrição do resgate",
            "example": "Solicitação de resgate"
          }
        }
      },
      "BarteWebhookRequest": {
        "type": "object",
        "required": ["eventType", "data"],
        "properties": {
          "eventType": {
            "type": "string",
            "description": "Tipo de evento",
            "example": "CHARGE_PAID"
          },
          "data": {
            "type": "object",
            "description": "Dados do evento"
          }
        }
      },
      "GenericWebhookRequest": {
        "type": "object",
        "required": ["eventType"],
        "properties": {
          "eventType": {
            "type": "string",
            "description": "Tipo de evento",
            "example": "PAYMENT_UPDATED"
          },
          "paymentId": {
            "type": "string",
            "description": "ID do pagamento"
          },
          "status": {
            "type": "string",
            "description": "Status do pagamento"
          }
        }
      },
      "PaymentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do pagamento"
          },
          "status": {
            "type": "string",
            "description": "Status do pagamento"
          },
          "amount": {
            "type": "integer",
            "description": "Valor do pagamento em reais"
          },
          "installments": {
            "type": "integer",
            "description": "Número de parcelas"
          },
          "externalId": {
            "type": "string",
            "description": "ID de referência externa"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "PaymentListResponse": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentResponse"
            }
          },
          "total": {
            "type": "integer",
            "description": "Contagem total (se solicitada)"
          },
          "offset": {
            "type": "integer",
            "description": "Offset atual"
          },
          "limit": {
            "type": "integer",
            "description": "Limite atual"
          }
        }
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "cardToken": {
            "type": "string",
            "format": "uuid",
            "description": "Token do cartão gerado"
          },
          "maskedCardNumber": {
            "type": "string",
            "description": "Número do cartão mascarado",
            "example": "****-****-****-1111"
          },
          "expirationDate": {
            "type": "string",
            "description": "Data de expiração do cartão",
            "example": "12/24"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação do token"
          }
        }
      },
      "BuyerResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID do comprador"
          },
          "name": {
            "type": "string",
            "description": "Nome do comprador"
          },
          "email": {
            "type": "string",
            "description": "Endereço de email"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "phone": {
            "type": "string",
            "description": "Número de telefone"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "SubscriptionResponse": {
        "type": "object",
        "properties": {
          "uuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID da assinatura"
          },
          "status": {
            "type": "string",
            "description": "Status da assinatura"
          },
          "planUuid": {
            "type": "string",
            "format": "uuid",
            "description": "UUID do plano"
          },
          "basicValue": {
            "$ref": "#/components/schemas/SubscriptionValue"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "description": "Data de início"
          },
          "nextBillingDate": {
            "type": "string",
            "format": "date",
            "description": "Próxima data de cobrança"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "availableBalance": {
            "type": "integer",
            "description": "Saldo disponível em reais"
          },
          "pendingBalance": {
            "type": "integer",
            "description": "Saldo pendente em reais"
          },
          "currency": {
            "type": "string",
            "description": "Código da moeda",
            "example": "BRL"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status de saúde",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp da verificação de saúde"
          }
        }
      },
      "RedeemResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID da solicitação de resgate"
          },
          "status": {
            "type": "string",
            "description": "Status do resgate"
          },
          "amount": {
            "type": "integer",
            "description": "Valor do resgate em centavos"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp de criação"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": ["error", "message"],
        "properties": {
          "error": {
            "type": "integer",
            "description": "Código do erro"
          },
          "message": {
            "type": "string",
            "description": "Mensagem do erro"
          },
          "details": {
            "type": "object",
            "description": "Detalhes adicionais do erro"
          }
        }
      },
      "CreatePixPaymentRequest": {
        "type": "object",
        "required": ["amount", "description", "externalId"],
        "properties": {
          "amount": {
            "type": "integer",
            "description": "Valor da cobrança em reais",
            "example": 150,
            "minimum": 1
          },
          "description": {
            "type": "string",
            "description": "Descrição da cobrança (máximo 140 caracteres)",
            "example": "Compra na loja virtual",
            "maxLength": 140
          },
          "externalId": {
            "type": "string",
            "description": "Identificador único da transação em seu sistema",
            "example": "pedido-12345"
          },
          "expiration": {
            "type": "string",
            "format": "date-time",
            "description": "Data de expiração da cobrança (ISO 8601)"
          },
          "buyer": {
            "$ref": "#/components/schemas/PixBuyer"
          },
          "pixKey": {
            "type": "string",
            "description": "Chave PIX do recebedor (para cobrança por chave)"
          },
          "keyType": {
            "type": "string",
            "enum": ["DOCUMENT", "EMAIL", "PHONE", "RANDOM_KEY"],
            "description": "Tipo da chave PIX"
          },
          "callback_url": {
            "type": "string",
            "format": "uri",
            "description": "URL para receber webhooks específicos desta transação"
          },
          "metadata": {
            "type": "object",
            "description": "Dados adicionais da transação",
            "additionalProperties": {
              "type": "string"
            }
          },
          "splits": {
            "type": "array",
            "description": "Configuração de split de pagamento",
            "items": {
              "$ref": "#/components/schemas/PixSplit"
            }
          }
        }
      },
      "CreatePixWithdrawRequest": {
        "type": "object",
        "required": ["type", "value", "details"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["PIX"],
            "description": "Tipo da operação"
          },
          "value": {
            "type": "number",
            "description": "Valor da transferência em reais",
            "example": 250.50,
            "minimum": 0.01
          },
          "details": {
            "$ref": "#/components/schemas/PixWithdrawDetails"
          },
          "qrCodeData": {
            "type": "string",
            "description": "Dados do QR Code PIX (para transferência por QR Code)"
          },
          "externalId": {
            "type": "string",
            "description": "Identificador único da transferência em seu sistema"
          },
          "description": {
            "type": "string",
            "description": "Descrição da transferência",
            "maxLength": 140
          },
          "callback_url": {
            "type": "string",
            "format": "uri",
            "description": "URL para receber webhooks específicos desta transferência"
          },
          "metadata": {
            "type": "object",
            "description": "Dados adicionais da transferência",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PixRefundRequest": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "Valor do estorno em reais. Se não informado, será estorno total",
            "minimum": 0.01
          },
          "description": {
            "type": "string",
            "description": "Descrição do motivo do estorno"
          }
        }
      },
      "PixBuyer": {
        "type": "object",
        "required": ["name", "document"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do pagador",
            "example": "Maria Silva Santos"
          },
          "document": {
            "type": "string",
            "description": "CPF ou CNPJ do pagador (apenas números)",
            "example": "12345678901"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do pagador para notificações",
            "example": "maria@email.com"
          },
          "phone": {
            "type": "string",
            "description": "Telefone do pagador",
            "example": "11999999999"
          }
        }
      },
      "PixWithdrawDetails": {
        "type": "object",
        "required": ["key", "keyType", "name", "document"],
        "properties": {
          "key": {
            "type": "string",
            "description": "Chave PIX do beneficiário",
            "example": "usuario@email.com"
          },
          "keyType": {
            "type": "string",
            "enum": ["DOCUMENT", "EMAIL", "PHONE", "RANDOM_KEY"],
            "description": "Tipo da chave PIX"
          },
          "name": {
            "type": "string",
            "description": "Nome completo do beneficiário",
            "example": "Ana Silva Santos"
          },
          "document": {
            "type": "string",
            "description": "CPF ou CNPJ do beneficiário (apenas números)",
            "example": "12345678901"
          }
        }
      },
      "PixSplit": {
        "type": "object",
        "required": ["recipient_id", "type", "value"],
        "properties": {
          "recipient_id": {
            "type": "string",
            "description": "ID do beneficiário"
          },
          "type": {
            "type": "string",
            "enum": ["percentage", "fixed_amount"],
            "description": "Tipo de divisão"
          },
          "value": {
            "type": "number",
            "description": "Valor (% para percentage, R$ para fixed_amount)"
          },
          "description": {
            "type": "string",
            "description": "Descrição da participação"
          }
        }
      },
      "PixPaymentResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único da transação PIX no FireBanking"
          },
          "externalId": {
            "type": "string",
            "description": "Seu identificador único da transação"
          },
          "status": {
            "type": "string",
            "enum": ["waiting_payment", "paid", "expired", "cancelled"],
            "description": "Status atual da transação"
          },
          "amount": {
            "type": "integer",
            "description": "Valor da cobrança em centavos"
          },
          "currency": {
            "type": "string",
            "example": "BRL"
          },
          "description": {
            "type": "string",
            "description": "Descrição da cobrança"
          },
          "qrCode": {
            "$ref": "#/components/schemas/PixQRCode"
          },
          "pixKey": {
            "type": "string",
            "description": "Chave PIX gerada para esta transação"
          },
          "buyer": {
            "$ref": "#/components/schemas/PixBuyer"
          },
          "paymentLink": {
            "type": "string",
            "format": "uri",
            "description": "Link direto para pagamento"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de expiração da cobrança"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de criação da transação"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PixWithdrawResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID único da transferência no FireBanking"
          },
          "externalId": {
            "type": "string",
            "description": "Seu identificador único da transferência"
          },
          "status": {
            "type": "string",
            "enum": ["WAITING_CONFIRMATION", "WITHDRAW_PAID", "ERROR"],
            "description": "Status da transferência"
          },
          "type": {
            "type": "string",
            "example": "cash_out"
          },
          "value": {
            "type": "integer",
            "description": "Valor transferido em centavos"
          },
          "currency": {
            "type": "string",
            "example": "BRL"
          },
          "description": {
            "type": "string"
          },
          "beneficiary": {
            "$ref": "#/components/schemas/PixBeneficiary"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "processed_at": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PixRefundResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "description": "ID único do estorno"
          },
          "originalTransactionId": {
            "type": "string",
            "description": "ID da transação original"
          },
          "status": {
            "type": "string",
            "description": "Status do estorno"
          },
          "refundValue": {
            "type": "integer",
            "description": "Valor do estorno em centavos"
          },
          "originalValue": {
            "type": "integer",
            "description": "Valor original em centavos"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PixTransactionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["waiting_payment", "paid", "expired", "cancelled", "refund_in", "WITHDRAW_PAID", "ERROR"]
          },
          "type": {
            "type": "string",
            "enum": ["cash_in", "cash_out"]
          },
          "amount": {
            "type": "integer"
          },
          "currency": {
            "type": "string",
            "example": "BRL"
          },
          "description": {
            "type": "string"
          },
          "buyer": {
            "$ref": "#/components/schemas/PixBuyer"
          },
          "beneficiary": {
            "$ref": "#/components/schemas/PixBeneficiary"
          },
          "payer": {
            "$ref": "#/components/schemas/PixPayer"
          },
          "qrCode": {
            "$ref": "#/components/schemas/PixQRCode"
          },
          "paid_at": {
            "type": "string",
            "format": "date-time"
          },
          "processed_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PixTransactionListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PixTransactionResponse"
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "pages": {
                "type": "integer"
              }
            }
          },
          "summary": {
            "type": "object",
            "properties": {
              "total_transactions": {
                "type": "integer"
              },
              "total_cash_in": {
                "type": "integer"
              },
              "total_cash_out": {
                "type": "integer"
              },
              "total_value": {
                "type": "integer"
              },
              "total_fees": {
                "type": "integer"
              }
            }
          }
        }
      },
      "PixQRCode": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "Código PIX Copia e Cola"
          },
          "image": {
            "type": "string",
            "description": "QR Code em formato base64 (PNG)"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data/hora de expiração do QR Code"
          }
        }
      },
      "PixBeneficiary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "keyType": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/BankInfo"
          }
        }
      },
      "PixPayer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "document": {
            "type": "string"
          },
          "bank": {
            "$ref": "#/components/schemas/BankInfo"
          }
        }
      },
      "BankInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "ispb": {
            "type": "string"
          },
          "branch": {
            "type": "string"
          },
          "account": {
            "type": "string"
          }
        }
      },
      "CreateBoletoRequest": {
        "type": "object",
        "required": ["amount", "dueDate", "payer"],
        "properties": {
          "amount": {
            "type": "number",
            "description": "Valor do boleto em reais",
            "example": 150.75,
            "minimum": 0.01
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "description": "Data de vencimento do boleto (YYYY-MM-DD)",
            "example": "2025-04-15"
          },
          "payer": {
            "$ref": "#/components/schemas/BoletoPayer"
          },
          "externalId": {
            "type": "string",
            "description": "Identificador único do boleto em seu sistema",
            "example": "boleto-12345"
          },
          "description": {
            "type": "string",
            "description": "Descrição do boleto/finalidade do pagamento",
            "example": "Mensalidade do curso"
          },
          "instructions": {
            "type": "string",
            "description": "Instruções para pagamento (multa, juros, etc.)",
            "example": "Após vencimento multa de 2% + juros de 1% ao mês"
          },
          "callback_url": {
            "type": "string",
            "format": "uri",
            "description": "URL para receber webhooks específicos deste boleto"
          },
          "metadata": {
            "type": "object",
            "description": "Dados adicionais do boleto",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BoletoPayer": {
        "type": "object",
        "required": ["name", "document", "address"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Nome completo do pagador",
            "example": "Carlos Eduardo Mendes"
          },
          "document": {
            "type": "string",
            "description": "CPF ou CNPJ do pagador (apenas números)",
            "example": "12345678901"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email do pagador",
            "example": "carlos@email.com"
          },
          "phone": {
            "type": "string",
            "description": "Telefone do pagador",
            "example": "11999999999"
          },
          "address": {
            "$ref": "#/components/schemas/BoletoAddress"
          }
        }
      },
      "BoletoAddress": {
        "type": "object",
        "required": ["street", "number", "neighborhood", "city", "state", "zipCode"],
        "properties": {
          "street": {
            "type": "string",
            "description": "Logradouro/rua",
            "example": "Rua das Palmeiras"
          },
          "number": {
            "type": "string",
            "description": "Número",
            "example": "123"
          },
          "complement": {
            "type": "string",
            "description": "Complemento",
            "example": "Apto 45"
          },
          "neighborhood": {
            "type": "string",
            "description": "Bairro",
            "example": "Centro"
          },
          "city": {
            "type": "string",
            "description": "Cidade",
            "example": "São Paulo"
          },
          "state": {
            "type": "string",
            "description": "Estado (UF)",
            "example": "SP"
          },
          "zipCode": {
            "type": "string",
            "description": "CEP (apenas números)",
            "example": "01000000"
          }
        }
      },
      "BoletoResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID único do boleto no FireBanking",
            "example": "3f73ad66-04cb-4c2d-9520-e41e41c576cc"
          },
          "externalId": {
            "type": "string",
            "description": "Seu identificador único do boleto"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "paid", "expired", "cancelled"],
            "description": "Status atual do boleto"
          },
          "amount": {
            "type": "number",
            "description": "Valor do boleto em reais"
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "description": "Data de vencimento"
          },
          "barCode": {
            "type": "string",
            "description": "Código de barras do boleto"
          },
          "digitableLine": {
            "type": "string",
            "description": "Linha digitável do boleto"
          },
          "pdfUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para download do PDF do boleto"
          },
          "paymentLink": {
            "type": "string",
            "format": "uri",
            "description": "Link para pagamento online"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de criação do boleto"
          },
          "confirmed_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de confirmação/registro no banco"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BoletoDetailsResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "externalId": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["pending", "confirmed", "paid", "expired", "cancelled"]
          },
          "amount": {
            "type": "number"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "description": {
            "type": "string"
          },
          "instructions": {
            "type": "string"
          },
          "payer": {
            "$ref": "#/components/schemas/BoletoPayer"
          },
          "barCode": {
            "type": "string"
          },
          "digitableLine": {
            "type": "string"
          },
          "pdfUrl": {
            "type": "string",
            "format": "uri"
          },
          "paymentLink": {
            "type": "string",
            "format": "uri"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "confirmed_at": {
            "type": "string",
            "format": "date-time"
          },
          "paid_at": {
            "type": "string",
            "format": "date-time"
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time"
          },
          "payment_info": {
            "$ref": "#/components/schemas/BoletoPaymentInfo"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BoletoCancelResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID do boleto cancelado"
          },
          "status": {
            "type": "string",
            "example": "cancelled"
          },
          "cancelled_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data e hora do cancelamento"
          },
          "message": {
            "type": "string",
            "description": "Mensagem de confirmação",
            "example": "Boleto cancelado com sucesso"
          }
        }
      },
      "BoletoPdfResponse": {
        "type": "object",
        "properties": {
          "pdfUrl": {
            "type": "string",
            "format": "uri",
            "description": "URL para download do PDF do boleto"
          },
          "pdfBase64": {
            "type": "string",
            "description": "Conteúdo do PDF em base64"
          },
          "expires_at": {
            "type": "string",
            "format": "date-time",
            "description": "Data de expiração do link de download"
          }
        }
      },
      "BoletoPaymentInfo": {
        "type": "object",
        "properties": {
          "paymentDate": {
            "type": "string",
            "format": "date",
            "description": "Data do pagamento"
          },
          "paymentAmount": {
            "type": "number",
            "description": "Valor pago (pode incluir juros/multa)"
          },
          "paymentType": {
            "type": "string",
            "description": "Tipo de pagamento (débito, dinheiro, etc.)"
          },
          "bank": {
            "type": "string",
            "description": "Banco onde foi pago"
          },
          "agency": {
            "type": "string",
            "description": "Agência bancária"
          }
        }
      },
      "BoletoWebhookPayload": {
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "enum": ["boleto.confirmed", "boleto.paid", "boleto.cancelled"],
            "description": "Tipo do evento"
          },
          "boleto_id": {
            "type": "string",
            "description": "ID do boleto"
          },
          "external_id": {
            "type": "string",
            "description": "ID externo do boleto"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp do evento"
          },
          "data": {
            "type": "object",
            "description": "Dados específicos do evento",
            "properties": {
              "id": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "amount": {
                "type": "number"
              },
              "dueDate": {
                "type": "string",
                "format": "date"
              },
              "payment_info": {
                "$ref": "#/components/schemas/BoletoPaymentInfo"
              }
            }
          },
          "webhook": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "attempt": {
                "type": "integer"
              },
              "max_attempts": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key",
        "description": "Chave de API para autenticação"
      }
    }
  }
}